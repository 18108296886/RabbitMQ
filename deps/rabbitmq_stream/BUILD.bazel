load("@bazel-erlang//:bazel_erlang_lib.bzl", "erlc")
load(
    "//:rabbitmq.bzl",
    "RABBITMQ_TEST_ERLC_OPTS",
    "broker_for_integration_suites",
    "rabbitmq_integration_suite",
    "rabbitmq_lib",
    "rabbitmq_suite",
)

APP_NAME = "rabbitmq_stream"

APP_DESCRIPTION = "RabbitMQ Stream"

APP_MODULE = "rabbit_stream"

APP_ENV = """[
	{tcp_listeners, [5551]},
	{num_tcp_acceptors, 10},
	{tcp_listen_options, [{backlog,   128},
                          {nodelay,   true}]},
	{initial_credits, 50000},
	{credits_required_for_unblocking, 12500},
	{frame_max, 1048576},
	{heartbeat, 60},
	{advertised_host, undefined},
	{advertised_port, undefined}
]"""

BUILD_DEPS = [
    "//deps/rabbit_common:bazel_erlang_lib",
    "//deps/rabbitmq_cli:rabbitmqctl",
    "@ranch//:bazel_erlang_lib",
]

RUNTIME_DEPS = [
    "//deps/rabbit:bazel_erlang_lib",
]

rabbitmq_lib(
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    build_deps = BUILD_DEPS,
    runtime_deps = RUNTIME_DEPS,
)

broker_for_integration_suites()

PACKAGE = "deps/rabbitmq_stream"

erlc(
    name = "test_utils",
    testonly = True,
    srcs = [
        "test/test_utils.erl",
    ],
    dest = "test",
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS,
)

rabbitmq_integration_suite(
    PACKAGE,
    name = "commands_SUITE",
    additional_beam = [
        ":rabbit_stream_SUITE_beam_files",
        ":test_utils",
    ],
    data = glob(["test/rabbit_stream_SUITE_data/**/*"]),
)

rabbitmq_integration_suite(
    PACKAGE,
    name = "config_schema_SUITE",
)

rabbitmq_suite(
    name = "rabbit_stream_core_SUITE",
    size = "small",
)

rabbitmq_integration_suite(
    PACKAGE,
    name = "rabbit_stream_SUITE",
    additional_beam = [
        ":test_utils",
    ],
)
