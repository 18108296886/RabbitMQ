load("@bazel-erlang//:ct.bzl", "ct_suite")
load("//:rabbitmq_home.bzl", "rabbitmq_home")
load("//:rabbitmq_run.bzl", "rabbitmq_run")
load(
    "//:rabbitmq.bzl",
    "APP_VERSION",
    "RABBITMQ_TEST_ERLC_OPTS",
    "rabbitmq_integration_suite",
    "rabbitmq_lib",
)

APP_ENV = """[
	    {cache_ttl,      15000},
	    {cache_module,   rabbit_auth_cache_ets},
	    {cache_module_args, []},
	    {cached_backend, rabbit_auth_backend_internal},
	    {cache_refusals, false}
	  ]"""

APP_NAME = "rabbitmq_auth_backend_cache"

APP_DESCRIPTION = "RabbitMQ Authentication Backend cache"

APP_MODULE = "rabbit_auth_backend_cache_app"

BUILD_DEPS = [
    "@lager//:bazel_erlang_lib",
]

DEPS = [
    "//deps/rabbit_common:bazel_erlang_lib",
]

RUNTIME_DEPS = [
    "//deps/rabbit:bazel_erlang_lib",
]

FIRST_SRCS = [
    "src/rabbit_auth_cache.erl",
]

rabbitmq_lib(
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    app_version = APP_VERSION,
    build_deps = BUILD_DEPS,
    first_srcs = FIRST_SRCS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

rabbitmq_home(
    name = "broker-for-tests-home",
    plugins = [
        "//deps/rabbit:bazel_erlang_lib",
        ":bazel_erlang_lib",
    ],
)

rabbitmq_run(
    name = "rabbitmq-for-tests-run",
    home = ":broker-for-tests-home",
)

PACKAGE = "deps/rabbitmq_auth_backend_cache"

rabbitmq_integration_suite(
    PACKAGE,
    name = "config_schema_SUITE",
)

rabbitmq_integration_suite(
    PACKAGE,
    name = "rabbit_auth_backend_cache_SUITE",
)

ct_suite(
    name = "rabbit_auth_cache_SUITE",
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS,
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
    },
    runtime_deps = [
        "@rabbitmq_ct_helpers//:bazel_erlang_lib",
    ],
    deps = [
        "@lager//:bazel_erlang_lib",
    ],
)
