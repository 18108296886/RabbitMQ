name: Test Plugin
on:
  workflow_call:
    inputs:
      plugin:
        required: true
        type: string
    secrets:
      REMOTE_CACHE_BUCKET_NAME:
        required: true
      REMOTE_CACHE_CREDENTIALS_JSON:
        required: true
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        erlang_version:
        - 26
        metadata_store:
          - mnesia
          - khepri
        include:
        - erlang_version: 26
          elixir_version: 1.15
    timeout-minutes: 120
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v4
    - name: CONFIGURE OTP & ELIXIR
      uses: erlef/setup-beam@v1.17
      with:
        otp-version: ${{ matrix.erlang_version }}
        elixir-version: ${{ matrix.elixir_version }}
    - name: AUTHENTICATE TO GOOGLE CLOUD
      uses: google-github-actions/auth@v2.1.2
      with:
        credentials_json: ${{ secrets.REMOTE_CACHE_CREDENTIALS_JSON }}
    - name: CONFIGURE BAZEL
      run: |
        if [ -n "${{ secrets.REMOTE_CACHE_BUCKET_NAME }}" ]; then
        cat << EOF >> user.bazelrc
          build --remote_cache=https://storage.googleapis.com/${{ secrets.REMOTE_CACHE_BUCKET_NAME }}
          build --google_default_credentials
        EOF
        fi
        cat << EOF >> user.bazelrc
          build --color=yes
        EOF

        bazelisk info release
    #! - name: Setup tmate session
    #!   uses: mxschmitt/action-tmate@v3
    - name: deps/amqp10_client SETUP
      if: inputs.plugin == 'amqp10_client'
      run: |
        # reduce sandboxing so that activemq works
        cat << EOF >> user.bazelrc
          build --strategy=TestRunner=local
        EOF
    - name: deps/rabbit SETUP
      if: inputs.plugin == 'rabbit'
      run: |
        sudo apt-get update && \
        sudo apt-get install -y dotnet-sdk-6.0

        mkdir warmup \
          && cd warmup \
          && dotnet new console \
          && cd .. \
          && rm -rf warmup \
          && rm -rf /tmp/NuGetScratch
    - name: deps/rabbitmq_auth_backend_ldap SETUP
      if: inputs.plugin == 'rabbitmq_auth_backend_ldap'
      run: |
        sudo apt-get update && \
        sudo apt-get install -y \
          ldap-utils \
          slapd
    - name: RUN TESTS
      if: inputs.plugin != 'rabbitmq_peer_discovery_aws'
      run: |
        ## WARNING:
        ## secrets must not be set in --test_env or --action_env,
        ## or otherwise logs must not be saved as artifacts.
        ## rabbit_ct_helpers or other code may log portions of the
        ## env vars and leak them

        bazelisk test //deps/${{ inputs.plugin }}/... \
          --test_env RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }} \
          --test_tag_filters=-docker,-mixed-version-cluster \
          --build_tests_only \
          --verbose_failures
    - name: UPLOAD TEST LOGS
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bazel-testlogs-${{ inputs.plugin }}-${{ matrix.erlang_version }}-${{ matrix.metadata_store }}
        path: |
          bazel-testlogs/deps/${{ inputs.plugin }}/*
