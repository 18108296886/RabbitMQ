name: Update Bazel RBE Images
on:
  schedule:
  - cron: '0 3 * * *'
  workflow_dispatch:
jobs:
  update-rbe-images:
    name: Update Bazel RBE Images
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      IMAGE: pivotalrabbitmq/rabbitmq-server-buildenv
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2.3.4
    - name: SETUP BUILDOZER
      run: |
        sudo npm install --global --silent @bazel/buildozer
    - name: UPDATE RBE IMAGE SHA (23)
      env:
        TAG: linux-erlang-23.3
        LABEL: //:erlang_23_platform
      run: |
        # buildbuddy caches the container image, so we must use a specific sha to ensure
        # the latest is used
        echo "Retrieving current digest for ${IMAGE}:${TAG}"
        DIGEST="$(skopeo inspect --format '{{.Digest}}' docker://${IMAGE}:${TAG})"
        echo "Will use ${IMAGE}@${DIGEST}"
        npx buildozer \
          "dict_set exec_properties container-image:docker://${IMAGE}@${DIGEST}" \
          ${LABEL} || test $? -eq 3
    - name: UPDATE RBE IMAGE SHA (24)
      env:
        TAG: linux-erlang-24.0
        LABEL: //:erlang_24_platform
      run: |
        # buildbuddy caches the container image, so we must use a specific sha to ensure
        # the latest is used
        echo "Retrieving current digest for ${IMAGE}:${TAG}"
        DIGEST="$(skopeo inspect --format '{{.Digest}}' docker://${IMAGE}:${TAG})"
        echo "Will use ${IMAGE}@${DIGEST}"
        npx buildozer \
          "dict_set exec_properties container-image:docker://${IMAGE}@${DIGEST}" \
          ${LABEL} || test $? -eq 3
    - name: CREATE PULL REQUEST
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.REPO_SCOPED_TOKEN }}
        title: Adopt latest rabbitmq-server-buildenv:linux-erlang-${{ matrix.erlang_version }} for RBE
        labels: |
          backport-v3.9.x
          backport-v3.8.x
        branch: bump-rbe-image
        delete-branch: true
