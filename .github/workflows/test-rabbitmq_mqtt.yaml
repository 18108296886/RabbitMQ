name: Test rabbitmq_mqtt
on:
  workflow_call:
    inputs:
      trc:
        required: true
        type: string
      hash:
        required: true
        type: string
      ignore-dialyze-errors:
        type: boolean
jobs:
  test:
    name: Test rabbitmq_mqtt
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        otp_version:
        - 26.2
        metadata_store:
        - mnesia
        - khepri
    timeout-minutes: 180
    env:
      SUCCESS_PATH: ${{ inputs.trc }}/${{ inputs.hash }}/rabbitmq_mqtt/${{ matrix.metadata_store }}/${{ matrix.otp_version }}
    steps:
    - name: FETCH TEST RESULT CACHE
      uses: actions/download-artifact@v4
      with:
        name: test-result-cache-subdir
        path: ${{ inputs.trc }}
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v4
    - name: SETUP ERLANG/ELIXIR
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp_version }}
        elixir-version: 1.15
    - name: BUILD
      run: |
        make \
          RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
        mkdir -p ${{ env.SUCCESS_PATH }}
    - name: XREF
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/xref ]]; then
          echo "xref already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              xref \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/xref
        fi
    - name: DIALYZE
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/dialyze ]]; then
          echo "dialyze already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              dialyze \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/dialyze
        fi
      continue-on-error: ${{ inputs.ignore-dialyze-errors }}
    - name: EUNIT
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/eunit ]]; then
          echo "eunit already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              eunit \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/eunit
        fi
    - name: CT auth
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-auth ]]; then
          echo "ct-auth already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-auth \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-auth
        fi
    - name: CT cluster
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-cluster ]]; then
          echo "ct-cluster already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-cluster \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-cluster
        fi
    - name: CT command
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-command ]]; then
          echo "ct-command already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-command \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-command
        fi
    - name: CT config
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-config ]]; then
          echo "ct-config already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-config \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-config
        fi
    - name: CT config_schema
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-config_schema ]]; then
          echo "ct-config_schema already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-config_schema \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-config_schema
        fi
    - name: CT ff
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-ff ]]; then
          echo "ct-ff already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-ff \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-ff
        fi
    - name: CT java
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-java ]]; then
          echo "ct-java already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-java \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-java
        fi
    - name: CT mc_mqtt
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-mc_mqtt ]]; then
          echo "ct-mc_mqtt already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-mc_mqtt \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-mc_mqtt
        fi
    - name: CT mqtt_machine
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-mqtt_machine ]]; then
          echo "ct-mqtt_machine already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-mqtt_machine \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-mqtt_machine
        fi
    - name: CT packet_prop
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-packet_prop ]]; then
          echo "ct-packet_prop already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-packet_prop \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-packet_prop
        fi
    - name: CT processor
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-processor ]]; then
          echo "ct-processor already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-processor \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-processor
        fi
    - name: CT protocol_interop
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-protocol_interop ]]; then
          echo "ct-protocol_interop already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-protocol_interop \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-protocol_interop
        fi
    - name: CT proxy_protocol
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-proxy_protocol ]]; then
          echo "ct-proxy_protocol already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-proxy_protocol \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-proxy_protocol
        fi
    - name: CT rabbit_mqtt_confirms
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-rabbit_mqtt_confirms ]]; then
          echo "ct-rabbit_mqtt_confirms already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-rabbit_mqtt_confirms \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-rabbit_mqtt_confirms
        fi
    - name: CT reader
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-reader ]]; then
          echo "ct-reader already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-reader \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-reader
        fi
    - name: CT retainer
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-retainer ]]; then
          echo "ct-retainer already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-retainer \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-retainer
        fi
    - name: CT shared
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-shared ]]; then
          echo "ct-shared already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-shared \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-shared
        fi
    - name: CT util
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-util ]]; then
          echo "ct-util already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-util \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-util
        fi
    - name: CT v5
      run: |
        if [[ -f ${{ env.SUCCESS_PATH }}/ct-v5 ]]; then
          echo "ct-v5 already passed for this key ${{ inputs.hash }}"
        else
          make -C deps/rabbitmq_mqtt \
              ct-v5 \
              RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
          touch ${{ env.SUCCESS_PATH }}/ct-v5
        fi
    - name: SAVE CACHE COPY
      uses: actions/upload-artifact@v4.3.1
      with:
        name: trc-rabbitmq_mqtt-${{ matrix.metadata_store }}-${{ matrix.otp_version }}
        path: |
          ${{ inputs.trc }}
    - name: UPLOAD TEST ARTIFACTS
      if: always()
      uses: actions/upload-artifact@v4.3.1
      with:
        name: testlogs-rabbitmq_mqtt-${{ matrix.metadata_store }}-${{ matrix.otp_version }}
        path: deps/rabbitmq_mqtt/logs/*
