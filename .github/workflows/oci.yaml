# https://github.com/marketplace/actions/build-and-push-docker-images
name: OCI
on:
  push:
    paths-ignore:
      - '.github/workflows/secondary-umbrella.yaml'
      - '.github/workflows/update-elixir-patches.yaml'
      - '.github/workflows/update-otp-patches.yaml'
  workflow_dispatch:
env:
  VERSION: ${{ github.event.pull_request.head.sha || github.sha }}
  REGISTRY_IMAGE: pivotalrabbitmq/rabbitmq
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  build-publish-dev-bazel:
    runs-on: ubuntu-latest
    env:
      CONTEXT_DIR: context
    outputs:
      PUSH: ${{ steps.authorized.outputs.PUSH }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: rabbitmq-server

      - name: Configure Bazel
        working-directory: rabbitmq-server
        run: |
          if [ -n "${{ secrets.BUILDBUDDY_API_KEY }}" ]; then
          cat << EOF >> user.bazelrc
            build:buildbuddy --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API_KEY }}
          EOF
          fi
          cat << EOF >> user.bazelrc
            build:buildbuddy --build_metadata=ROLE=CI
            build:buildbuddy --build_metadata=VISIBILITY=PRIVATE
            build:buildbuddy --color=yes
          EOF

      - name: Build package-generic-unix
        working-directory: rabbitmq-server
        run: |
          bazelisk build package-generic-unix \
            --config=rbe-26_2 \
            --remote_download_toplevel

      - name: Assemble Contenxt
        run: |
          mkdir ${{ env.CONTEXT_DIR }}
          cp -r \
            rabbitmq-server/bazel-bin/package-generic-unix.tar.xz \
            rabbitmq-server/packaging/docker-image/* \
            ${{ env.CONTEXT_DIR }}

          rm -r ${{ env.CONTEXT_DIR }}/test_configs
          rm ${{ env.CONTEXT_DIR }}/BUILD.bazel
          rm ${{ env.CONTEXT_DIR }}/Makefile

          tree ${{ env.CONTEXT_DIR }}

      - name: Upload context
        uses: actions/upload-artifact@v4
        with:
          name: context
          path: ${{ env.CONTEXT_DIR }}
          if-no-files-found: error

      - name: Check for Push Credentials
        id: authorized
        run: |
          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            echo "PUSH=true" >> $GITHUB_OUTPUT
          else
            echo "PUSH=false" >> $GITHUB_OUTPUT
          fi

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: steps.authorized.outputs.PUSH == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker build
        run: |
          if [ "${{ steps.authorized.outputs.PUSH }}" == "true" ]; then
            PUSH_FLAG="--push"
          else
            PUSH_FLAG=""
          fi

          TAG_1="${{ env.VERSION }}"

          REF_NAME="${{ github.ref_name }}"
          TAG_2="${REF_NAME//\//-}"

          docker buildx build \
            --cache-from=type=gha \
            --cache-to=type=gha \
            --platform=linux/amd64,linux/arm64 \
            ${PUSH_FLAG} \
            --tag ${{ env.REGISTRY_IMAGE }}:$TAG_1 \
            --tag ${{ env.REGISTRY_IMAGE }}:$TAG_2 \
            ${{ env.CONTEXT_DIR }}

  summary-oci:
    needs:
    - build-publish-dev-bazel
    runs-on: ubuntu-latest
    steps:
    - name: SUMMARY
      run: |
        echo "SUCCESS"
