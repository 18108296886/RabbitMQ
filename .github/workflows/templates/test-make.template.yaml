#@ load("@ytt:data", "data")
#@yaml/text-templated-strings

#@ def job_names(plugins):
#@   names = []
#@   for p in plugins:
#@     names.append("test-"+p)
#@   end
#@   return names
#@ end

#@ def cache_prefix(name):
#@  prefix = "${{ runner.os }}-test-result-cache-${{ needs.xref.outputs.hash }}-"
#@  prefix += name
#@  if data.values.mixed_version_ref:
#@    prefix += "-mixed-"+data.values.mixed_version_ref
#@  end
#@  prefix += "-${{ matrix.metadata_store }}-${{ matrix.otp_version }}"
#@  return prefix
#@ end

#@ def test_plugin(name, needs, suites):
  test-(@= name @):
    name: Test (@= name @)
    needs: #@ needs
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        otp_version:
        - 26.2
        metadata_store:
          - mnesia
          - khepri
    timeout-minutes: 180
    steps:
      #@ if name == "rabbit":
      - name: INSTALL DOTNET
        run: |
          sudo apt-get update && \
          sudo apt-get install -y dotnet-sdk-6.0
      #@ end
      - name: RESTORE BUILT REPO
        uses: actions/cache@v4
        with:
          path: ${{ env.PRIMARY_VERSION_PATH }}
          key: ${{ runner.os }}-make-cache-${{ needs.xref.outputs.hash }}
          fail-on-cache-miss: true
#@ if data.values.mixed_version_ref != "none":
      - name: RESTORE BUILT MIXED VERSION REPO
        uses: actions/cache@v4
        with:
          path: ${{ env.MIXED_VERSION_PATH }}
          key: ${{ runner.os }}-make-cache-${{ needs.xref.outputs.hash }}-mixed
          fail-on-cache-miss: true
#@ end
      - name: COMPUTE PREVIOUS RUN ATTEPMT
        id: previous-attempt
        run: |
          PREVIOUS_ATTEMPT=$((${{ fromJSON(github.run_attempt) }} - 1))
          echo "number=$PREVIOUS_ATTEMPT" | tee -a $GITHUB_OUTPUT
      - name: RESTORE TEST RESULT CACHE
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: (@= cache_prefix(name) @)-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            (@= cache_prefix(name) @)-${{ github.run_number }}-${{ steps.previous-attempt-outputs.number }}
            (@= cache_prefix(name) @)-${{ github.run_number }}-
            (@= cache_prefix(name) @)-
      - name: PRINT CACHED RESULTS
        run: |
          set -x
          tree /home/runner/test-result-cache
        continue-on-error: true
      - name: SETUP ERLANG/ELIXIR
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp_version }}
          elixir-version: 1.15
      - name: PREPARE
        run: |
          mkdir -p ${{ env.CACHE_PATH }}
#@ if data.values.mixed_version_ref == "none":
      - name: DIALYZE
        working-directory: ${{ env.PRIMARY_VERSION_PATH }}
        run: |
          if [[ -f ${{ env.CACHE_PATH }}/dialyze ]]; then
            echo "dialyze already passed for this key ${{ needs.xref.outputs.hash }}"
          else
            make -C deps/(@= name @) \
                dialyze \
                RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
            touch ${{ env.CACHE_PATH }}/dialyze
          fi
        continue-on-error: #@ name == "rabbitmq_ct_helpers" or name == "trust_store_http"
      - name: EUNIT
        working-directory: ${{ env.PRIMARY_VERSION_PATH }}
        run: |
          if [[ -f ${{ env.CACHE_PATH }}/eunit ]]; then
            echo "eunit already passed for this key ${{ needs.xref.outputs.hash }}"
          else
            make -C deps/(@= name @) \
                eunit \
                RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
            touch ${{ env.CACHE_PATH }}/eunit
          fi
#@ end
#@ for suite in suites:
      - name: CT (@= suite if data.values.mixed_version_ref == "none" else suite + " MIXED" @)
#@ if name == "rabbitmq_peer_discovery_aws":
#@ if suite == "integration":
        if: false
#@ end
#@ end
        working-directory: ${{ env.PRIMARY_VERSION_PATH }}
#@ if data.values.mixed_version_ref != "none":
        env:
          SECONDARY_UMBRELLA: ${{ github.workspace }}/${{ env.MIXED_VERSION_PATH }}
#@ end
        run: |
          if [[ -f ${{ env.CACHE_PATH }}/ct-(@= suite @) ]]; then
            echo "ct-(@= suite @) already passed for this key ${{ needs.xref.outputs.hash }}"
          else
            make -C deps/(@= name @) \
                ct-(@= suite @) \
                RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
            touch ${{ env.CACHE_PATH }}/ct-(@= suite @)
          fi
#@ end
      - name: SAVE TEST RESULT CACHE
        if: always()
        uses: actions/cache/save@v4
        with:
          path: /home/runner/test-result-cache/
          key: (@= cache_prefix(name) @)-${{ github.run_number }}-${{ github.run_attempt }}
      - name: UPLOAD TEST ARTIFACTS
        if: always()
        uses: actions/upload-artifact@v4.3.1
        with:
          name: testlogs-(@= name @)-${{ matrix.metadata_store }}-${{ matrix.otp_version }}(@= "-mixed" if data.values.mixed_version_ref != "none" else "" @)
          path: |
            ${{ env.PRIMARY_VERSION_PATH }}/deps/(@= name @)/logs/*
#@ end

#@yaml/text-templated-strings
#@ def test_cli(needs):
  test-rabbitmq_cli:
    name: Test rabbitmq_cli
    needs: #@ needs
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        otp_version:
        - 26.2
        metadata_store:
          - mnesia
          - khepri
    timeout-minutes: 20
    steps:
      - name: RESTORE BUILT REPO
        uses: actions/cache@v4
        with:
          path: ${{ env.PRIMARY_VERSION_PATH }}
          key: ${{ runner.os }}-make-cache-${{ needs.xref.outputs.hash }}
          fail-on-cache-miss: true
#@ if data.values.mixed_version_ref != "none":
      - name: RESTORE BUILT MIXED VERSION REPO
        uses: actions/cache@v4
        with:
          path: ${{ env.MIXED_VERSION_PATH }}
          key: ${{ runner.os }}-make-cache-${{ needs.xref.outputs.hash }}-mixed
          fail-on-cache-miss: true
#@ end
      - name: COMPUTE PREVIOUS RUN ATTEPMT
        id: previous-attempt
        run: |
          PREVIOUS_ATTEMPT=$((${{ fromJSON(github.run_attempt) }} - 1))
          echo "number=$PREVIOUS_ATTEMPT" | tee -a $GITHUB_OUTPUT
      - name: RESTORE TEST RESULT CACHE
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: (@= cache_prefix('rabbitmq_cli') @)-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            (@= cache_prefix('rabbitmq_cli') @)-${{ github.run_number }}-${{ steps.previous-attempt-outputs.number }}
            (@= cache_prefix('rabbitmq_cli') @)-${{ github.run_number }}-
            (@= cache_prefix('rabbitmq_cli') @)-
      - name: PRINT CACHED RESULTS
        run: |
          set -x
          tree /home/runner/test-result-cache
        continue-on-error: true
      - name: SETUP ERLANG/ELIXIR
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp_version }}
          elixir-version: 1.15
      - name: PREPARE
        run: |
          mkdir -p ${{ env.CACHE_PATH }}
      - name: TEST(@= "" if data.values.mixed_version_ref == "none" else " MIXED" @)
        id: test
        working-directory: ${{ env.PRIMARY_VERSION_PATH }}
#@ if data.values.mixed_version_ref != "none":
        env:
          SECONDARY_UMBRELLA: ${{ github.workspace }}/${{ env.MIXED_VERSION_PATH }}
#@ end
        run: |
          if [[ -f ${{ env.CACHE_PATH }}/checks ]]; then
            echo "checks already passed for this key ${{ needs.xref.outputs.hash }}"
          else
            make -C deps/rabbitmq_cli \
                checks \
                RABBITMQ_METADATA_STORE=${{ matrix.metadata_store }}
            touch ${{ env.CACHE_PATH }}/checks
          fi
      - name: SAVE TEST RESULT CACHE
        if: always()
        uses: actions/cache/save@v4
        with:
          path: /home/runner/test-result-cache/
          key: (@= cache_prefix('rabbitmq_cli') @)-${{ github.run_number }}-${{ github.run_attempt }}
      - name: UPLOAD TEST ARTIFACTS
        if: always()
        uses: actions/upload-artifact@v4.3.1
        with:
          name: testlogs-rabbitmq_cli-${{ matrix.metadata_store }}-${{ matrix.otp_version }}(@= "-mixed" if data.values.mixed_version_ref != "none" else "" @)
          path: |
            ${{ env.PRIMARY_VERSION_PATH }}/deps/rabbitmq_cli/logs/*
#@ end

---
#@ load("@ytt:template", "template")
name: #@ "Test (make)" + (" Mixed Versions" if data.values.mixed_version_ref != "none" else "" )
on:
  push:
    branches:
      - main
      - v3.13.x
      - v3.12.x
      - v3.11.x
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
env:
  PRIMARY_VERSION_PATH: rabbitmq-server
  MIXED_VERSION_PATH: secondary-umbrella
  CACHE_PATH: /home/runner/test-result-cache
jobs:
  xref:
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.hash.outputs.hash }}
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v4
        with:
          path: ${{ env.PRIMARY_VERSION_PATH }}
      - name: SETUP ERLANG/ELIXIR
        if: steps.check.outputs.passed != 'true'
        uses: erlef/setup-beam@v1
        with:
          otp-version: 26.2
          elixir-version: 1.15
      - name: ENSURE WORKFLOWS ARE UP TO DATE
        working-directory: ${{ env.PRIMARY_VERSION_PATH }}
        run: |
          mkdir local-bin/
          curl -L https://carvel.dev/install.sh | K14SIO_INSTALL_BIN_DIR=local-bin bash

          make actions-workflows YTT=$PWD/local-bin/ytt
          git diff --exit-code
      - name: COMPUTE REPO HASH
        id: hash
        working-directory: ${{ env.PRIMARY_VERSION_PATH }}
        run: |
          echo "hash=${{ hashFiles('**', '!WORKSPACE', '!.github/**', '!**.bazel', '!**.bzl', '!**/BUILD.*') }}" | tee -a $GITHUB_OUTPUT
      - name: CACHE BUILT REPO
        uses: actions/cache@v4
        with:
          path: ${{ env.PRIMARY_VERSION_PATH }}
          key: ${{ runner.os }}-make-cache-${{ steps.hash.outputs.hash }}
      - name: BUILD
        working-directory: ${{ env.PRIMARY_VERSION_PATH }}
        run: |
          make
#@ if data.values.mixed_version_ref == "none":
      - name: XREF
        working-directory: ${{ env.PRIMARY_VERSION_PATH }}
        run: |
          make xref
          - name: CACHE BUILT REPO
          uses: actions/cache@v4
          with:
            path: ${{ env.PRIMARY_VERSION_PATH }}
            key: ${{ runner.os }}-make-cache-${{ steps.hash.outputs.hash }}
#@ end
#@ if data.values.mixed_version_ref != "none":
      - name: CHECKOUT MIXED VERSION REPOSITORY
        uses: actions/checkout@v4
        with:
          ref: #@ data.values.mixed_version_ref
          path: ${{ env.MIXED_VERSION_PATH }}
      - name: CACHE BUILT MIXED VERSION REPO
        uses: actions/cache@v4
        with:
          path: ${{ env.MIXED_VERSION_PATH }}
          key: ${{ runner.os }}-make-cache-${{ steps.hash.outputs.hash }}-mixed
      - name: BUILD
        working-directory: ${{ env.MIXED_VERSION_PATH }}
        run: |
          make
#@ end
#@ for plugin in data.values.internal_deps:
  _: #@ template.replace(test_plugin(plugin, ["xref"], data.values[plugin].suites))
#@ end
  _: #@ template.replace(test_plugin("rabbit", ["xref"] + job_names(data.values.internal_deps), data.values.rabbit.suites))
  _: #@ template.replace(test_cli(["xref", "test-rabbit"]))
#@ for plugin in data.values.tier1_plugins:
  _: #@ template.replace(test_plugin(plugin, ["xref"], data.values[plugin].suites))
#@ end
  summary-test-make:
    if: always()
    needs: #@ ["xref", "test-rabbit", "test-rabbitmq_cli"] + job_names(data.values.internal_deps + data.values.tier1_plugins)
    runs-on: ubuntu-latest
    steps:
      - name: SUMMARY
        run: |
          cat << 'EOF' | jq -e 'map(.result == "success") | all(.)'
          ${{ toJson(needs) }}
          EOF
